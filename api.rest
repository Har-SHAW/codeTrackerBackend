POST http://localhost:3000/runCode
Content-Type: application/json

{"code":"#include <iostream>\n\nusing namespace std;\n\nvoid merge(int arr[], int l, int m, int r) {\n    int n1 = m - l + 1;\n    int n2 = r - m;\n    int L[n1], R[n2];\n    for (int i = 0; i < n1; i++) {\n        L[i] = arr[l + i];\n    }\n    for (int j = 0; j < n2; j++) {\n        R[j] = arr[m + 1 + j];\n    }\n    int i = 0;\n    int j = 0;\n    int k = l;\n    while (i < n1 && j < n2) {\n        if (L[i] <= R[j]) {\n            arr[k] = L[i];\n            i++;\n        } else {\n            arr[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        arr[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        arr[k] = R[j];\n        j++;\n        k++;\n    }\n}\nvoid mergeSort(int arr[], int l, int r) {\n    if (l >= r) {\n        return;\n    }\n    int m = l + (r - l) / 2;\n    mergeSort(arr, l, m);\n    mergeSort(arr, m + 1, r);\n    merge(arr, l, m, r);\n}\nvoid printArray(int A[], int size) {\n    for (int i = 0; i < size; i++) {\n        cout << A[i] << \" \";\n    }\n}\nint main() {\n    int arr[] = {12,11,13,5,6,7};\n    int arr_size = sizeof(arr) / sizeof(arr[0]);\n    mergeSort(arr, 0, arr_size - 1);\n    printArray(arr, arr_size);\n    return 0;\n}","input":""}

###
POST https://shaw.loca.lt/runCode
Content-Type: application/json

{"code":"\n#include <iostream>\nusing namespace std;\n\nvoid merge(int arr[], int l, int m, int r)\n{\n\tint n1 = m - l + 1;\n\tint n2 = r - m;\n\tint L[n1], R[n2];\n\tfor (int i = 0; i < n1; i++)\n\t\tL[i] = arr[l + i];\n\tfor (int j = 0; j < n2; j++)\n\t\tR[j] = arr[m + 1 + j];\n\tint i = 0;\n\tint j = 0;\n\tint k = l;\n\n\twhile (i < n1 && j < n2) {\n\t\tif (L[i] <= R[j]) {\n\t\t\tarr[k] = L[i];\n\t\t\ti++;\n\t\t}\n\t\telse {\n\t\t\tarr[k] = R[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < n1) {\n\t\tarr[k] = L[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < n2) {\n\t\tarr[k] = R[j];\n\t\tj++;\n\t\tk++;\n\t}\n}\nvoid mergeSort(int arr[],int l,int r){\n\tif(l>=r){\n\t\treturn;\n\t}\n\tint m =l+ (r-l)/2;\n\tmergeSort(arr,l,m);\n\tmergeSort(arr,m+1,r);\n\tmerge(arr,l,m,r);\n}\nvoid printArray(int A[], int size)\n{\n\tfor (int i = 0; i < size; i++)\n\t\tcout << A[i] << \" \";\n}\nint main()\n{\n\tint arr[] = { 12, 11, 13, 5, 6, 7 };\n\tint arr_size = sizeof(arr) / sizeof(arr[0]);\n\n\tcout << \"Given array is \";\n\tprintArray(arr, arr_size);\n\n\tmergeSort(arr, 0, arr_size - 1);\n\n\tcout << \"Sorted array is \";\n\tprintArray(arr, arr_size);\n\treturn 0;\n}\n","input":""}